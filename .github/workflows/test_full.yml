name: Tests Full Python

on:
  schedule:
    - cron: "4 2 * * 3"
  workflow_dispatch:

jobs:
  Library:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          ref: main

      - name: Make Keepalive Commit
        run: |
          echo "Keepalive commit at $(date)" > keepalive.txt
          git config --global user.name "gkr-bot"
          git config --global user.email "gkr-bot@tuta.io"
          git add keepalive.txt
          git commit -m "Automated commit by Keepalive Workflow to keep the repository active" || echo "No changes to commit"
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Automated commit by Keepalive Workflow to keep the repository active"
          title: "Keep Repository Active"
          body: "This PR is automatically generated to keep the repository active."
          branch: keepalive-branch
          base: main
      - name: Close Pull Request
        if: steps.cpr.outputs.pull-request-number != ''
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ steps.cpr.outputs.pull-request-number }};
            await github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              state: 'closed'
            });
            console.log(`Closed PR #${prNumber}`);

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies
      - name: Install MacOS dependencies
        run: |
          brew install libomp
        if: ${{ matrix.os == 'macos-latest' }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r prereq.txt
      - name: Test Core - slow part one
        timeout-minutes: 1000
        run: |
          pip install .[testing]
          pytest -vvvs --durations=50 -m "slow_1"
      - name: Test Core - slow part two
        timeout-minutes: 1000
        run: |
          pip install .[testing]
          pytest -vvvs --durations=50 -m "slow_2"
      - name: Test Core - fast
        timeout-minutes: 1000
        run: |
          pip install .[testing]
          pytest -vvvs --durations=50 -m "not slow"
      - name: Test GOGGLE
        run: |
          pip install .[testing,goggle]
          pytest -vvvs -k goggle --durations=50
