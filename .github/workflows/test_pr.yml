name: Tests Fast Python

on:
  push:
    branches: [main, release]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  Linter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install bandit pre-commit
      - name: pre-commit validation
        run: pre-commit run --all
      - name: Security checks
        run: |
          bandit -r src/synthcity/*

  Library:
    needs: [Linter]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies
      - name: Set libomp environment variables (macOS only)
        run: |
          brew install libomp
          LIBOMP_PATH="/opt/homebrew/opt/libomp"
          echo "LDFLAGS=-L${LIBOMP_PATH}/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I${LIBOMP_PATH}/include" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=${LIBOMP_PATH}/lib:\$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "OMP_PATH=${LIBOMP_PATH}/include" >> $GITHUB_ENV
        if: ${{ runner.os == 'macOS' }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r prereq.txt
      - name: Limit OpenMP threads (Critical for macOS else it can hang without error)
        run: |
          echo "OMP_NUM_THREADS=2" >> $GITHUB_ENV
      - name: Test Core
        run: |
          pip install .[testing]
          pip freeze
          pytest -vvvsx -m "not slow" --durations=50
      - name: Set macOS deployment target
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV
        if: ${{ runner.os == 'macOS' }}
      - name: Test GOGGLE
        run: |
          pip install .[testing,goggle]
          pytest -vvvsx -m "not slow" -k goggle
